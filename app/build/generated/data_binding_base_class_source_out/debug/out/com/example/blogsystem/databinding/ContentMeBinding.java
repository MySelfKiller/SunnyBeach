// Generated by view binder compiler. Do not edit!
package com.example.blogsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.blogsystem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout feedbackContainer;

  @NonNull
  public final ImageView imageAvatar;

  @NonNull
  public final LinearLayout likeContainer;

  @NonNull
  public final LinearLayout messageCenterContainer;

  @NonNull
  public final LinearLayout settingContainer;

  @NonNull
  public final TextView textNickName;

  private ContentMeBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout feedbackContainer,
      @NonNull ImageView imageAvatar, @NonNull LinearLayout likeContainer,
      @NonNull LinearLayout messageCenterContainer, @NonNull LinearLayout settingContainer,
      @NonNull TextView textNickName) {
    this.rootView = rootView;
    this.feedbackContainer = feedbackContainer;
    this.imageAvatar = imageAvatar;
    this.likeContainer = likeContainer;
    this.messageCenterContainer = messageCenterContainer;
    this.settingContainer = settingContainer;
    this.textNickName = textNickName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_me, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feedbackContainer;
      LinearLayout feedbackContainer = rootView.findViewById(id);
      if (feedbackContainer == null) {
        break missingId;
      }

      id = R.id.image_avatar;
      ImageView imageAvatar = rootView.findViewById(id);
      if (imageAvatar == null) {
        break missingId;
      }

      id = R.id.likeContainer;
      LinearLayout likeContainer = rootView.findViewById(id);
      if (likeContainer == null) {
        break missingId;
      }

      id = R.id.messageCenterContainer;
      LinearLayout messageCenterContainer = rootView.findViewById(id);
      if (messageCenterContainer == null) {
        break missingId;
      }

      id = R.id.settingContainer;
      LinearLayout settingContainer = rootView.findViewById(id);
      if (settingContainer == null) {
        break missingId;
      }

      id = R.id.text_nick_name;
      TextView textNickName = rootView.findViewById(id);
      if (textNickName == null) {
        break missingId;
      }

      return new ContentMeBinding((LinearLayout) rootView, feedbackContainer, imageAvatar,
          likeContainer, messageCenterContainer, settingContainer, textNickName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
