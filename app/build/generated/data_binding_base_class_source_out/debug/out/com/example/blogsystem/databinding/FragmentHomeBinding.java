// Generated by view binder compiler. Do not edit!
package com.example.blogsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.example.blogsystem.R;
import com.example.blogsystem.view.RoundRelativeLayout;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView homeSearchTv;

  @NonNull
  public final RoundRelativeLayout searchContainer;

  @NonNull
  public final ImageView searchIv;

  @NonNull
  public final LinearLayout settingContainer;

  @NonNull
  public final TabLayout tabLayoutCategories;

  @NonNull
  public final LinearLayout topLayout;

  @NonNull
  public final ViewPager2 vp2HomeArticleContainer;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull TextView homeSearchTv,
      @NonNull RoundRelativeLayout searchContainer, @NonNull ImageView searchIv,
      @NonNull LinearLayout settingContainer, @NonNull TabLayout tabLayoutCategories,
      @NonNull LinearLayout topLayout, @NonNull ViewPager2 vp2HomeArticleContainer) {
    this.rootView = rootView;
    this.homeSearchTv = homeSearchTv;
    this.searchContainer = searchContainer;
    this.searchIv = searchIv;
    this.settingContainer = settingContainer;
    this.tabLayoutCategories = tabLayoutCategories;
    this.topLayout = topLayout;
    this.vp2HomeArticleContainer = vp2HomeArticleContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.homeSearchTv;
      TextView homeSearchTv = rootView.findViewById(id);
      if (homeSearchTv == null) {
        break missingId;
      }

      id = R.id.searchContainer;
      RoundRelativeLayout searchContainer = rootView.findViewById(id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.searchIv;
      ImageView searchIv = rootView.findViewById(id);
      if (searchIv == null) {
        break missingId;
      }

      id = R.id.settingContainer;
      LinearLayout settingContainer = rootView.findViewById(id);
      if (settingContainer == null) {
        break missingId;
      }

      id = R.id.tabLayout_categories;
      TabLayout tabLayoutCategories = rootView.findViewById(id);
      if (tabLayoutCategories == null) {
        break missingId;
      }

      id = R.id.topLayout;
      LinearLayout topLayout = rootView.findViewById(id);
      if (topLayout == null) {
        break missingId;
      }

      id = R.id.vp2_home_article_container;
      ViewPager2 vp2HomeArticleContainer = rootView.findViewById(id);
      if (vp2HomeArticleContainer == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, homeSearchTv, searchContainer,
          searchIv, settingContainer, tabLayoutCategories, topLayout, vp2HomeArticleContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
