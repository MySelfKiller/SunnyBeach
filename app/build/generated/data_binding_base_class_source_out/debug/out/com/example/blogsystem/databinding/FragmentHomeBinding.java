// Generated by view binder compiler. Do not edit!
package com.example.blogsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.blogsystem.R;
import com.example.blogsystem.view.RoundRelativeLayout;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView articleListRv;

  @NonNull
  public final LinearLayout discoverLL;

  @NonNull
  public final TextView homeSearchTv;

  @NonNull
  public final TabLayout labelTL;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final NestedScrollView nsvContainer;

  @NonNull
  public final RoundRelativeLayout searchContainer;

  @NonNull
  public final ImageView searchIv;

  @NonNull
  public final LinearLayout settingContainer;

  @NonNull
  public final LinearLayout topLayout;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull RecyclerView articleListRv,
      @NonNull LinearLayout discoverLL, @NonNull TextView homeSearchTv, @NonNull TabLayout labelTL,
      @NonNull LinearLayout linearLayout, @NonNull NestedScrollView nsvContainer,
      @NonNull RoundRelativeLayout searchContainer, @NonNull ImageView searchIv,
      @NonNull LinearLayout settingContainer, @NonNull LinearLayout topLayout) {
    this.rootView = rootView;
    this.articleListRv = articleListRv;
    this.discoverLL = discoverLL;
    this.homeSearchTv = homeSearchTv;
    this.labelTL = labelTL;
    this.linearLayout = linearLayout;
    this.nsvContainer = nsvContainer;
    this.searchContainer = searchContainer;
    this.searchIv = searchIv;
    this.settingContainer = settingContainer;
    this.topLayout = topLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.articleListRv;
      RecyclerView articleListRv = rootView.findViewById(id);
      if (articleListRv == null) {
        break missingId;
      }

      id = R.id.discoverLL;
      LinearLayout discoverLL = rootView.findViewById(id);
      if (discoverLL == null) {
        break missingId;
      }

      id = R.id.homeSearchTv;
      TextView homeSearchTv = rootView.findViewById(id);
      if (homeSearchTv == null) {
        break missingId;
      }

      id = R.id.labelTL;
      TabLayout labelTL = rootView.findViewById(id);
      if (labelTL == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.nsvContainer;
      NestedScrollView nsvContainer = rootView.findViewById(id);
      if (nsvContainer == null) {
        break missingId;
      }

      id = R.id.searchContainer;
      RoundRelativeLayout searchContainer = rootView.findViewById(id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.searchIv;
      ImageView searchIv = rootView.findViewById(id);
      if (searchIv == null) {
        break missingId;
      }

      id = R.id.settingContainer;
      LinearLayout settingContainer = rootView.findViewById(id);
      if (settingContainer == null) {
        break missingId;
      }

      id = R.id.topLayout;
      LinearLayout topLayout = rootView.findViewById(id);
      if (topLayout == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, articleListRv, discoverLL,
          homeSearchTv, labelTL, linearLayout, nsvContainer, searchContainer, searchIv,
          settingContainer, topLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
