apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'
apply from: '../config.gradle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

// Android 代码规范文档：https://github.com/getActivity/AndroidCodeStandard
android {

    // 资源目录存放指引：https://developer.android.google.cn/guide/topics/resources/providing-resources
    defaultConfig {

        // 无痛修改包名：https://www.jianshu.com/p/17327e191d2e
        applicationId 'cn.cqautotest.sunnybeach'

        // 仅保留中文语种的资源
        resConfigs 'zh'

        // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
        resConfig 'xxhdpi'

        // 混淆配置
        proguardFiles 'proguard-sdk.pro', 'proguard-app.pro'
    }

    // Apk 签名的那些事：https://www.jianshu.com/p/a1f8e5896aa2
    signingConfigs {
        config {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
    }

    buildFeatures {
        viewBinding true
    }

    // Kotlin
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // 避免编译不能用于在编译类路径中发现的注解处理器，因为它们中的任何更改都需要运行注解处理任务
    kapt.includeCompileClasspath = false

    buildTypes {

        debug {
            // 给包名添加后缀
            applicationIdSuffix '.debug'
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false
            // 签名信息配置
            signingConfig signingConfigs.config
            // 日志打印开关
            buildConfigField('boolean', 'LOG_ENABLE', 'true')
            // 测试包下的 BuglyId
            buildConfigField('String', 'BUGLY_ID', '"请自行替换 Bugly 上面的 AppID"')
            // 测试服务器的主机地址
            buildConfigField('String', 'HOST_URL', '"https://www.test.baidu.com/"')
            // 设置清单占位符
            manifestPlaceholders = ['app_name': '阳光沙滩 Debug 版']
            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }

        preview.initWith(debug)
        preview {
            applicationIdSuffix ''
            // 设置清单占位符
            manifestPlaceholders = ['app_name': '阳光沙滩 Preview 版']
        }

        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 签名信息配置
            signingConfig signingConfigs.config
            // 日志打印开关
            buildConfigField('boolean', 'LOG_ENABLE', 'false')
            // 正式包下的 BuglyId
            buildConfigField('String', 'BUGLY_ID', '"请自行替换 Bugly 上面的 AppID"')
            // 正式服务器的主机地址
            buildConfigField('String', 'HOST_URL', '"https://www.baidu.com/"')
            // 设置清单占位符
            manifestPlaceholders = ['app_name': '@string/app_name']
            // 仅保留两种架构的 so 库，根据 Bugly 统计得出
            ndk {
                // armeabi：万金油架构平台（占用率：0%）
                // armeabi-v7a：曾经主流的架构平台（占用率：10%）
                // arm64-v8a：目前主流架构平台（占用率：95%）
                abiFilters 'armeabi-v7a', 'arm64-v8a'
                moduleName "app"
            }
        }
    }

    packagingOptions {
        // 剔除这个包下的所有文件（不会移除签名信息）
        exclude 'META-INF/*******'
    }

    // AOP 配置（exclude 和 include 二选一）
    aspectjx {
        // 排除一些第三方库的包名（Gson、 LeakCanary 和 AOP 有冲突）
        // exclude 'androidx', 'com.google', 'com.squareup', 'org.apache', 'com.alipay', 'com.taobao', 'versions.9'
        // 只对以下包名做 AOP 处理
        include 'cn.cqautotest.sunnybeach'
        // 否则就会引发冲突，具体表现为：
        // 编译不过去，报错：java.util.zip.ZipException：Cause: zip file is empty
        // 编译能过去，但运行时报错：ClassNotFoundException: Didn't find class on path: DexPathList
    }

    applicationVariants.all { variant ->

        // Apk 输出文件名配置
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format('MMdd')
            }
            outputFileName += '.apk'
        }
    }
}

// api 与 implementation 的区别：https://www.jianshu.com/p/8962d6ba936e
dependencies {
    def nav_version = "2.3.5"
    def room_version = "2.3.0"
    // 基类封装
    implementation project(':base')
    // 控件封装
    implementation project(':widget')
    // 友盟封装
    implementation project(':umeng')

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.activity:activity-ktx:1.2.3'
    implementation 'androidx.fragment:fragment-ktx:1.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // 权限请求框架：https://github.com/getActivity/XXPermissions
    implementation 'com.hjq:xxpermissions:9.8'

    // 标题栏框架：https://github.com/getActivity/TitleBar
    implementation 'com.hjq:titlebar:8.2'

    // 吐司框架：https://github.com/getActivity/ToastUtils
    implementation 'com.hjq:toast:8.8'

    // 网络请求框架：https://github.com/getActivity/EasyHttp
    implementation 'com.hjq:http:9.0'
    // OkHttp 框架：https://github.com/square/okhttp
    // noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'
    // Android网络请求库：https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0-RC1'

    // Json 解析框架：https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.6'
    // Gson 解析容错：https://github.com/getActivity/GsonFactory
    implementation 'com.hjq.gson:factory:3.0'

    // AOP 插件库：https://mvnrepository.com/artifact/org.aspectj/aspectjrt
    implementation 'org.aspectj:aspectjrt:1.9.6'

    // 图片加载框架：https://github.com/bumptech/glide
    // 官方使用文档：https://muyangmin.github.io/glide-docs-cn/
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // 沉浸式框架：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'

    // 手势 ImageView：https://github.com/chrisbanes/PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // Bugly 异常捕捉：https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20190418140644
    implementation 'com.tencent.bugly:crashreport:3.3.3'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.700'

    // 动画解析库：https://github.com/airbnb/lottie-android
    // 动画资源：https://lottiefiles.com、https://icons8.com/animated-icons
    implementation 'com.airbnb.android:lottie:3.6.1'

    // 刷新框架：https://github.com/scwang90/SmartRefreshLayout
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'
    implementation 'com.scwang.smart:refresh-header-material:2.0.3'

    // 日志打印框架：https://github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // 指示器框架：https://github.com/ongakuer/CircleIndicator
    implementation 'me.relex:circleindicator:2.1.4'

    // 内存泄漏监测框架：https://github.com/square/leakcanary
    // noinspection GradleDependency
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
    // noinspection GradleDependency
    previewImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    // 国际化：https://github.com/getActivity/MultiLanguages
    // 悬浮窗：https://github.com/getActivity/XToast
    // 日志输出：https://github.com/getActivity/Logcat
    // 工具类：https://github.com/Blankj/AndroidUtilCode
    implementation 'com.blankj:utilcodex:1.30.6'
    // 轮播图：https://github.com/bingoogolapple/BGABanner-Android
    // 二维码：https://github.com/bingoogolapple/BGAQRCode-Android
    // 跑马灯：https://github.com/sunfusheng/MarqueeView
    // 对象注解：https://www.jianshu.com/p/f1f888e4a35f
    // 平板适配：https://github.com/JessYanCoding/AndroidAutoSize
    // 图片压缩：https://github.com/Curzibn/Luban
    // 对象存储：https://github.com/leavesC/DoKV
    // 第三方支付：https://github.com/Cuieney/RxPay
    // 多渠道打包：https://github.com/Meituan-Dianping/walle
    // 设备唯一标识：http://msa-alliance.cn/col.jsp?id=120

    // Room 数据库
    implementation "androidx.room:room-runtime:$room_version"
    // 使用 Kotlin 注解处理工具 (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // 对 Room 的 Kotlin 扩展和协程支持
    implementation "androidx.room:room-ktx:$room_version"
    // MMKV，基于 mmap 的高性能通用 key-value 组件：https://github.com/Tencent/MMKV
    implementation 'com.tencent:mmkv-static:1.2.9'

    // 一个强大并且灵活的RecyclerViewAdapter：https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    // 轮播图库：https://github.com/youth5201314/banner
    implementation 'com.youth.banner:banner:2.1.0'

    // 小米更新SDK：https://dev.mi.com/console/doc/detail?pId=4
    implementation 'mi-appstore:xiaomi-update-sdk:4.0.3'
}